---
export interface Props {
  currentPage: number;
  totalPages: number;
  disablePrevious?: boolean;
  disableNext?: boolean;
}

const { currentPage, totalPages, disablePrevious, disableNext } = Astro.props;

const previousUrl = currentPage === 2 ? '/blog' : `/blog/${currentPage - 1}`;
const nextUrl = `/blog/${currentPage + 1}`;
---

<nav class="pagination" aria-label="Blog pagination">
  <div class="pagination-container">
    {!disablePrevious && currentPage > 1 ? (
      <a href={previousUrl} class="pagination-button">
        <svg class="pagination-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
        </svg>
        Previous
      </a>
    ) : (
      <span class="pagination-button pagination-button-disabled">
        <svg class="pagination-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
        </svg>
        Previous
      </span>
    )}
    
    <span class="pagination-info">
      Page <span class="pagination-current">{currentPage}</span> of <span class="pagination-total">{totalPages}</span>
    </span>
    
    {!disableNext && currentPage < totalPages ? (
      <a href={nextUrl} class="pagination-button">
        Next
        <svg class="pagination-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
        </svg>
      </a>
    ) : (
      <span class="pagination-button pagination-button-disabled">
        Next
        <svg class="pagination-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
        </svg>
      </span>
    )}
  </div>
</nav>

<style>
  .pagination {
    margin-top: 3rem;
  }
  
  .pagination-container {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  
  .pagination-button {
    display: inline-flex;
    align-items: center;
    padding: 0.5rem 1rem;
    font-size: 0.875rem;
    font-weight: 500;
    color: #1f2937;
    background-color: white;
    border: 1px solid #d1d5db;
    border-radius: 0.375rem;
    text-decoration: none;
    transition: background-color 0.2s, border-color 0.2s;
  }
  
  .pagination-button:hover {
    background-color: #f3f4f6;
    border-color: #9ca3af;
  }
  
  .pagination-button-disabled {
    color: #9ca3af;
    background-color: #f3f4f6;
    cursor: not-allowed;
  }
  
  .pagination-button-disabled:hover {
    background-color: #f3f4f6;
    border-color: #d1d5db;
  }
  
  .pagination-icon {
    width: 1.25rem;
    height: 1.25rem;
  }
  
  .pagination-button:first-child .pagination-icon {
    margin-right: 0.5rem;
  }
  
  .pagination-button:last-child .pagination-icon {
    margin-left: 0.5rem;
  }
  
  .pagination-info {
    font-size: 0.875rem;
    color: #6b7280;
  }
  
  .pagination-current, .pagination-total {
    font-weight: 500;
  }
</style>